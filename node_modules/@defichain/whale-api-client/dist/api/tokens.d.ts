import { WhaleApiClient } from '../whale.api.client';
import { ApiPagedResponse } from '../whale.api.response';
export declare class Tokens {
    private readonly client;
    constructor(client: WhaleApiClient);
    /**
     * Paginate query tokens.
     *
     * @param {number} size of tokens to query
     * @param {string} next set of tokens
     * @return {Promise<ApiPagedResponse<TokenData>>}
     */
    list(size?: number, next?: string): Promise<ApiPagedResponse<TokenData>>;
    /**
     * Get information about a token with id of the token.
     *
     * @param {string} id
     * @return {Promise<TokenData>}
     */
    get(id: string): Promise<TokenData>;
}
/**
 * Tokens data.
 */
export interface TokenData {
    id: string;
    symbol: string;
    displaySymbol: string;
    symbolKey: string;
    name: string;
    decimal: number;
    limit: string;
    mintable: boolean;
    tradeable: boolean;
    isDAT: boolean;
    isLPS: boolean;
    isLoanToken: boolean;
    finalized: boolean;
    minted: string;
    creation: {
        tx: string;
        height: number;
    };
    destruction: {
        tx: string;
        height: number;
    };
    collateralAddress?: string;
}

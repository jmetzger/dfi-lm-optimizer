import { WhaleApiClient } from '../whale.api.client';
import { ApiPagedResponse } from '../whale.api.response';
/**
 * DeFi whale endpoint for oracle related services.
 */
export declare class Oracles {
    private readonly client;
    constructor(client: WhaleApiClient);
    /**
     * Get a list of Oracles
     *
     * @param {number} [size=30] for number of records per page
     * @param {string} [next] offset for the next page
     * @return {Promise<Oracle>}
     */
    list(size?: number, next?: string): Promise<ApiPagedResponse<Oracle>>;
    /**
     * Get price feed
     *
     * @param {string} oracleId identifier for an Oracle
     * @param {string} token symbol as part of the price feed pair
     * @param {string} currency fiat currency part of the price feed pair
     * @param {number} [size=30] for number of records per page
     * @param {string} [next] offset for the next page
     * @return {Promise<OraclePriceFeed>}
     */
    getPriceFeed(oracleId: string, token: string, currency: string, size?: number, next?: string): Promise<ApiPagedResponse<OraclePriceFeed>>;
    /**
     * Get oracle by address
     *
     * @param {string} address owner address for an Oracle
     * @return {Promise<Oracle>}
     */
    getOracleByAddress(address: string): Promise<Oracle>;
}
export interface Oracle {
    id: string;
    weightage: number;
    ownerAddress: string;
    priceFeeds: Array<{
        token: string;
        currency: string;
    }>;
    block: {
        hash: string;
        height: number;
        time: number;
        medianTime: number;
    };
}
export interface OraclePriceFeed {
    id: string;
    key: string;
    sort: string;
    token: string;
    currency: string;
    oracleId: string;
    txid: string;
    time: number;
    amount: string;
    block: {
        hash: string;
        height: number;
        time: number;
        medianTime: number;
    };
}

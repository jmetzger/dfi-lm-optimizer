import { ApiClient } from '../.';
/**
 * Net RPCs for DeFi Blockchain
 */
export declare class Net {
    private readonly client;
    constructor(client: ApiClient);
    /**
     * Returns the number of connections to other nodes.
     *
     * @return {Promise<number>}
     */
    getConnectionCount(): Promise<number>;
    /**
     * Returns an object containing various state info regarding P2P networking.
     *
     * @return {Promise<NetworkInfo>}
     */
    getNetworkInfo(): Promise<NetworkInfo>;
}
export interface NetworkInfo {
    version: number;
    subversion: string;
    protocolversion: number;
    localservices: string;
    localrelay: boolean;
    timeoffset: number;
    connections: number;
    networkactive: boolean;
    networks: Network[];
    relayfee: number;
    incrementalfee: number;
    localaddresses: LocalAddress[];
    warnings: string;
}
export interface Network {
    name: string;
    limited: boolean;
    reachable: boolean;
    proxy: string;
    proxy_randomize_credentials: boolean;
}
export interface LocalAddress {
    address: string;
    port: number;
    score: number;
}
//# sourceMappingURL=net.d.ts.map